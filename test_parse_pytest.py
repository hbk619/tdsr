import parse_pytest


lines = """
=============================================================================== test session starts ===============================================================================
platform mystery -- Python 3.11.2, pytest-7.4.3, pluggy-1.3.0
rootdir: /Users/blah/code/tdsr
collected 1 item

test_things.py F                                                                                                                                                            [100%]

==================================================================================== FAILURES =====================================================================================
___________________________________________________________________________________ test_answer ___________________________________________________________________________________

    def test_answer():
>       assert inc(3) == 5
E       assert 4 == 5
E        +  where 4 = inc(3)

test_things.py:7: AssertionError
============================================================================= short test summary info =============================================================================
FAILED test_things.py::test_answer - assert 4 == 5
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
================================================================================ 1 failed in 0.01s ================================================================================"""


def test_parsing_assert_error():
    expected = ["code is assert inc(3) == 5", "assert 4 == 5", "where 4 = inc(3)", "1 failed"]
    results = parse_pytest.parse_output(lines.split('\n'))
    assert results == expected


key_error = """
================================================================== FAILURES ===================================================================
_____________________________________________________________ test_answer_correct _____________________________________________________________

    def test_answer_correct():
>       assert {}["blah"] == 1
E       KeyError: 'blah'

test_things.py:7: KeyError
=========================================================== short test summary info ===========================================================
FAILED test_things.py::test_answer_correct - KeyError: 'blah'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
============================================================== 1 failed in 0.01s =============================================================="""


def test_parsing_key_error():
    expected = ["code is assert {}[\"blah\"] == 1", "KeyError: 'blah'", "1 failed"]
    results = parse_pytest.parse_output(key_error.split('\n'))
    assert results == expected